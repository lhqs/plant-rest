<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lhqs.dao.MembershipInfoMapper">
  <resultMap id="BaseResultMap" type="cn.lhqs.model.MembershipInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auth_id" jdbcType="VARCHAR" property="authId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />

    <result column="sensor_one" jdbcType="VARCHAR" property="sensorOne" />
    <result column="sensor_two" jdbcType="VARCHAR" property="sensorTwo" />
    <result column="sensor_three" jdbcType="VARCHAR" property="sensorThree" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, auth_id, username, password, status, mobile_phone, email, create_name, create_time, 
    update_name, update_time,sensor_one, sensor_two, sensor_three
  </sql>
  <select id="selectByExample" parameterType="cn.lhqs.model.MembershipInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from membership_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from membership_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from membership_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByAuthId">
    DELETE from membership_info
    where auth_id = #{authId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByAuthIdSensor">
    DELETE from limit_sensor
    where auth_id = #{authId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lhqs.model.MembershipInfoExample">
    delete from membership_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lhqs.model.MembershipInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into membership_info (auth_id, username, password, 
      status, mobile_phone, email, 
      create_name, create_time, update_name, 
      update_time)
    values (#{authId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{mobilePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.lhqs.model.MembershipInfo">
    insert into membership_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>

      <if test="homeDir != null">
        home_dir,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>

      <if test="mobilePhone != null">
        mobile_phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>

      <if test="homeDir != null">
        #{homeDir,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>

      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lhqs.model.MembershipInfoExample" resultType="java.lang.Long">
    select count(*) from membership_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update membership_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.authId != null">
        auth_id = #{record.authId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.mobilePhone != null">
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateName != null">
        update_name = #{record.updateName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update membership_info
    set id = #{record.id,jdbcType=INTEGER},
      auth_id = #{record.authId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_name = #{record.updateName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySensorLimit" parameterType="cn.lhqs.model.MembershipInfo">
    update limit_sensor
    <set>
      <if test="sensorOne != null">
        sensor_one = #{sensorOne,jdbcType=VARCHAR},
      </if>
      <if test="sensorTwo != null">
        sensor_two = #{sensorTwo,jdbcType=VARCHAR},
      </if>
      <if test="sensorThree != null">
        sensor_three = #{sensorThree,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where auth_id = #{authId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lhqs.model.MembershipInfo">
    update membership_info
    <set>
      <if test="authId != null">
        auth_id = #{authId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lhqs.model.MembershipInfo">
    update membership_info
    set auth_id = #{authId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllMembershipInfo" resultType="cn.lhqs.model.MembershipInfo">
    select
       m.id as id, m.auth_id as authId, m.username as username, m.password as password, m.status as status,
       m.mobile_phone as mobilePhone, m.email as email, m.create_name as createName, m.create_time as createTime,
      m.update_name as updateName, m.update_time as updateTime,s.sensor_one as sensorOne, s.sensor_two as sensorTwo,
      s.sensor_three as sensorThree,m.home_dir as homeDir, m.org_name as orgName, m.image_url as imageUrl
    from membership_info m,
    limit_sensor s
    WHERE
      m.auth_id = s.auth_id

  </select>

  <select id="getMembershipInfoCount" resultType="java.lang.Integer">
    SELECT
      count(*)
    FROM membership_info
    <where>
      <if test="username != null">
        and username = #{username,jdbcType=VARCHAR}
      </if>
      <if test="password != null">
        and password = #{password,jdbcType=VARCHAR}
      </if>

    </where>
  </select>

  <select id="getUserCount" resultType="java.lang.Integer">
    SELECT
    count(*)
    FROM membership_info m
    WHERE
    m.status = 1 and
      username = #{username,jdbcType=VARCHAR}

  </select>

  <select id="selectUserDatails" parameterType="cn.lhqs.model.MembershipInfo" resultType="cn.lhqs.model.MembershipInfo">
    SELECT
    username,
    sensor_one AS sensorOne,
    sensor_two AS sensorTwo,
    sensor_three AS sensorThree,
    home_dir AS homeDir,
    org_name as orgName,
    image_url as imageUrl
    FROM
    membership_info m,
    limit_sensor s
    WHERE
    m.`status` = 1
    AND m.auth_id = s.auth_id
    <if test="username != null">
      and username = #{username,jdbcType=VARCHAR}
    </if>
    <if test="password != null">
      and password = #{password,jdbcType=VARCHAR}
    </if>
  </select>

  <insert id="insertSensorLimit" parameterType="cn.lhqs.model.MembershipInfo">
    insert into limit_sensor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="sensorOne != null">
        sensor_one,
      </if>
      <if test="sensorTwo != null">
        sensor_two,
      </if>
      <if test="sensorThree != null">
        sensor_three,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=VARCHAR},
      </if>
      <if test="sensorOne != null">
        #{sensorOne,jdbcType=VARCHAR},
      </if>
      <if test="sensorTwo != null">
        #{sensorTwo,jdbcType=VARCHAR},
      </if>
      <if test="sensorThree != null">
        #{sensorThree,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="selectMembershipInfoByUsername" resultType="cn.lhqs.model.MembershipInfo">
    select
       m.id as id, m.auth_id as authId, m.username as username, m.password as password, m.status as status,
       m.mobile_phone as mobilePhone, m.email as email, m.create_name as createName, m.create_time as createTime,
      m.update_name as updateName, m.update_time as updateTime,s.sensor_one as sensorOne, s.sensor_two as sensorTwo,
       s.sensor_three as sensorThree
    from membership_info m,
    limit_sensor s
    WHERE
      m.auth_id = s.auth_id
      and username LIKE CONCAT(CONCAT('%', #{username}), '%')
  </select>
</mapper>